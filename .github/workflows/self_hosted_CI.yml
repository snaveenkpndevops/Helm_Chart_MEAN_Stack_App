name: Helm CI/CD Automation

on:
  workflow_dispatch:     # This line makes the workflow run only when user's manual trigger (eliminates automatic trigger on push)
    inputs:
      update_chart_version:
        description: 'Do you want to update the chart version? (yes/no)'
        required: true
        default: 'no'

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  BUILD_ID: ${{ github.run_id }}
  FRONTEND_IMAGE: snaveenkpn/restaurant-frontend

jobs:
  build-and-deploy:
    runs-on: self-hosted           # Self-hosted runner tag

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Docker debug login  
    - name: Debug Docker Login Environment Variables
      run: |
        echo "DOCKER_USERNAME=$env:DOCKER_USERNAME"
        echo "DOCKER_PASSWORD is set"
      shell: powershell


    # Step 2: Docker login    #// We already login to dockerhub manually in our local machine. so skip this step
    - name: Docker Login
      run: |
        docker login -u $env:DOCKER_USERNAME -p $env:DOCKER_PASSWORD
      shell: powershell

    # Step 3: Build Docker image
    - name: Build Docker Image
      run: |
        docker build -t $env:FRONTEND_IMAGE:$env:BUILD_ID ./frontend



    # Step 4: Push Docker image to DockerHub
    - name: Push Docker Image
      run: |
        docker tag $env:FRONTEND_IMAGE:$env:BUILD_ID $env:FRONTEND_IMAGE:$env:BUILD_ID
        docker push $env:FRONTEND_IMAGE:$env:BUILD_ID

    # Step 5: Update `values.yaml` and `Chart.yaml` with new image tag
    - name: Update Helm Chart Image Tag
      run: |
        sed -i 's/tag: ".*"/tag: "${BUILD_ID}"/' ./helm/frontend-chart/values.yaml
        sed -i 's/appVersion: ".*"/appVersion: "${BUILD_ID}"/' ./helm/frontend-chart/Chart.yaml

    # Step 6: Update Chart Version
    - name: Update Chart Version
      if: ${{ github.event.inputs.update_chart_version == 'yes' }}
      run: |
        current_version=$(grep '^version:' ./helm/frontend-chart/Chart.yaml | awk '{print $2}')
        major_version=$(echo $current_version | cut -d. -f1)
        minor_version=$(echo $current_version | cut -d. -f2)
        patch_version=$(echo $current_version | cut -d. -f3)
        new_version="${major_version}.$((minor_version+1)).0"
        sed -i "s/^version: .*/version: ${new_version}/" ./helm/frontend-chart/Chart.yaml
      env:
        BUILD_ID: ${{ env.BUILD_ID }}

    # Step 7: Package Helm Chart
    - name: Package Helm Chart
      run: |
        helm package ./helm/frontend-chart -d ./helm/output

    # Step 8: Update Index.yaml
    - name: Update Helm Repo Index
      run: |
        helm repo index ./helm/output --url https://snaveenkpn.github.io/Helm_Chart_MEAN_Stack_App

    # # Step 9: Commit Changes
    # - name: Commit and Push Changes
    #   run: |
    #     git config user.name "GitHub Actions"
    #     git config user.email "actions@github.com"
    #     git add .
    #     git commit -m "Updated Helm Chart with Build ID ${BUILD_ID}"
    #     git push
