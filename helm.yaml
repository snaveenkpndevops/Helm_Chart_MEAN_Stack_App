name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build Docker Image
      - name: Build Docker Image
        run: |
          IMAGE_TAG=$(date +%Y%m%d%H%M%S)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t my-app:${IMAGE_TAG} .
          docker tag my-app:${IMAGE_TAG} my-docker-repo/my-app:${IMAGE_TAG}
          echo "Built Docker image: my-docker-repo/my-app:${IMAGE_TAG}"

      # Step 4: Push Docker Image
      - name: Push Docker Image
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push my-docker-repo/my-app:${IMAGE_TAG}

      # Step 5: Update Helm Chart
      - name: Update Helm Chart
        run: |
          sed -i "s|image:.*|image: my-docker-repo/my-app:${IMAGE_TAG}|" helm-chart/values.yaml
          sed -i "s|appVersion:.*|appVersion: ${IMAGE_TAG}|" helm-chart/Chart.yaml
          NEW_CHART_VERSION=$(awk -F. '{$NF += 1; OFS = "."; print $0}' <<< $(grep 'version:' helm-chart/Chart.yaml | awk '{print $2}'))
          sed -i "s|version:.*|version: ${NEW_CHART_VERSION}|" helm-chart/Chart.yaml
          echo "Updated Helm chart with image: my-docker-repo/my-app:${IMAGE_TAG}, appVersion: ${IMAGE_TAG}, version: ${NEW_CHART_VERSION}"

      # Step 6: Package Helm Chart
      - name: Package Helm Chart
        run: |
          helm package helm-chart
          echo "Packaged Helm chart."

      # Step 7: Deploy to Cluster
      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          helm upgrade --install my-app ./helm-chart-*.tgz --namespace my-namespace
